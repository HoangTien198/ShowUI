//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShowUI.ISC_Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicepostdataSoap", Namespace="http://tempuri.org/")]
    public partial class Servicepostdata : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GET_RISK_SOFTWAREOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_UNJOIN_DOMAINOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_NOUPDATE_WANNACRYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_OPEN_445OperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_ACCOUNT_ADMIMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_OPEN_USBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_ANTIVIRUSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_CONNECTED_INTERNETOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_OPEN_CDROMOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Servicepostdata() {
            this.Url = global::ShowUI.Properties.Settings.Default.ShowUI_ISC_Service_Servicepostdata;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GET_RISK_SOFTWARECompletedEventHandler GET_RISK_SOFTWARECompleted;
        
        /// <remarks/>
        public event GET_UNJOIN_DOMAINCompletedEventHandler GET_UNJOIN_DOMAINCompleted;
        
        /// <remarks/>
        public event GET_NOUPDATE_WANNACRYCompletedEventHandler GET_NOUPDATE_WANNACRYCompleted;
        
        /// <remarks/>
        public event GET_OPEN_445CompletedEventHandler GET_OPEN_445Completed;
        
        /// <remarks/>
        public event GET_ACCOUNT_ADMIMCompletedEventHandler GET_ACCOUNT_ADMIMCompleted;
        
        /// <remarks/>
        public event GET_OPEN_USBCompletedEventHandler GET_OPEN_USBCompleted;
        
        /// <remarks/>
        public event GET_ANTIVIRUSCompletedEventHandler GET_ANTIVIRUSCompleted;
        
        /// <remarks/>
        public event GET_CONNECTED_INTERNETCompletedEventHandler GET_CONNECTED_INTERNETCompleted;
        
        /// <remarks/>
        public event GET_OPEN_CDROMCompletedEventHandler GET_OPEN_CDROMCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_RISK_SOFTWARE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_RISK_SOFTWARE(string Account, string IPRange) {
            object[] results = this.Invoke("GET_RISK_SOFTWARE", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_RISK_SOFTWAREAsync(string Account, string IPRange) {
            this.GET_RISK_SOFTWAREAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_RISK_SOFTWAREAsync(string Account, string IPRange, object userState) {
            if ((this.GET_RISK_SOFTWAREOperationCompleted == null)) {
                this.GET_RISK_SOFTWAREOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_RISK_SOFTWAREOperationCompleted);
            }
            this.InvokeAsync("GET_RISK_SOFTWARE", new object[] {
                        Account,
                        IPRange}, this.GET_RISK_SOFTWAREOperationCompleted, userState);
        }
        
        private void OnGET_RISK_SOFTWAREOperationCompleted(object arg) {
            if ((this.GET_RISK_SOFTWARECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_RISK_SOFTWARECompleted(this, new GET_RISK_SOFTWARECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_UNJOIN_DOMAIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_UNJOIN_DOMAIN(string Account, string IPRange) {
            object[] results = this.Invoke("GET_UNJOIN_DOMAIN", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_UNJOIN_DOMAINAsync(string Account, string IPRange) {
            this.GET_UNJOIN_DOMAINAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_UNJOIN_DOMAINAsync(string Account, string IPRange, object userState) {
            if ((this.GET_UNJOIN_DOMAINOperationCompleted == null)) {
                this.GET_UNJOIN_DOMAINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_UNJOIN_DOMAINOperationCompleted);
            }
            this.InvokeAsync("GET_UNJOIN_DOMAIN", new object[] {
                        Account,
                        IPRange}, this.GET_UNJOIN_DOMAINOperationCompleted, userState);
        }
        
        private void OnGET_UNJOIN_DOMAINOperationCompleted(object arg) {
            if ((this.GET_UNJOIN_DOMAINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_UNJOIN_DOMAINCompleted(this, new GET_UNJOIN_DOMAINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_NOUPDATE_WANNACRY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_NOUPDATE_WANNACRY(string Account, string IPRange) {
            object[] results = this.Invoke("GET_NOUPDATE_WANNACRY", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_NOUPDATE_WANNACRYAsync(string Account, string IPRange) {
            this.GET_NOUPDATE_WANNACRYAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_NOUPDATE_WANNACRYAsync(string Account, string IPRange, object userState) {
            if ((this.GET_NOUPDATE_WANNACRYOperationCompleted == null)) {
                this.GET_NOUPDATE_WANNACRYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_NOUPDATE_WANNACRYOperationCompleted);
            }
            this.InvokeAsync("GET_NOUPDATE_WANNACRY", new object[] {
                        Account,
                        IPRange}, this.GET_NOUPDATE_WANNACRYOperationCompleted, userState);
        }
        
        private void OnGET_NOUPDATE_WANNACRYOperationCompleted(object arg) {
            if ((this.GET_NOUPDATE_WANNACRYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_NOUPDATE_WANNACRYCompleted(this, new GET_NOUPDATE_WANNACRYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_OPEN_445", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_OPEN_445(string Account, string IPRange) {
            object[] results = this.Invoke("GET_OPEN_445", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_OPEN_445Async(string Account, string IPRange) {
            this.GET_OPEN_445Async(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_OPEN_445Async(string Account, string IPRange, object userState) {
            if ((this.GET_OPEN_445OperationCompleted == null)) {
                this.GET_OPEN_445OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_OPEN_445OperationCompleted);
            }
            this.InvokeAsync("GET_OPEN_445", new object[] {
                        Account,
                        IPRange}, this.GET_OPEN_445OperationCompleted, userState);
        }
        
        private void OnGET_OPEN_445OperationCompleted(object arg) {
            if ((this.GET_OPEN_445Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_OPEN_445Completed(this, new GET_OPEN_445CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_ACCOUNT_ADMIM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_ACCOUNT_ADMIM(string Account, string IPRange) {
            object[] results = this.Invoke("GET_ACCOUNT_ADMIM", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_ACCOUNT_ADMIMAsync(string Account, string IPRange) {
            this.GET_ACCOUNT_ADMIMAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_ACCOUNT_ADMIMAsync(string Account, string IPRange, object userState) {
            if ((this.GET_ACCOUNT_ADMIMOperationCompleted == null)) {
                this.GET_ACCOUNT_ADMIMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_ACCOUNT_ADMIMOperationCompleted);
            }
            this.InvokeAsync("GET_ACCOUNT_ADMIM", new object[] {
                        Account,
                        IPRange}, this.GET_ACCOUNT_ADMIMOperationCompleted, userState);
        }
        
        private void OnGET_ACCOUNT_ADMIMOperationCompleted(object arg) {
            if ((this.GET_ACCOUNT_ADMIMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_ACCOUNT_ADMIMCompleted(this, new GET_ACCOUNT_ADMIMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_OPEN_USB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_OPEN_USB(string Account, string IPRange) {
            object[] results = this.Invoke("GET_OPEN_USB", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_OPEN_USBAsync(string Account, string IPRange) {
            this.GET_OPEN_USBAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_OPEN_USBAsync(string Account, string IPRange, object userState) {
            if ((this.GET_OPEN_USBOperationCompleted == null)) {
                this.GET_OPEN_USBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_OPEN_USBOperationCompleted);
            }
            this.InvokeAsync("GET_OPEN_USB", new object[] {
                        Account,
                        IPRange}, this.GET_OPEN_USBOperationCompleted, userState);
        }
        
        private void OnGET_OPEN_USBOperationCompleted(object arg) {
            if ((this.GET_OPEN_USBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_OPEN_USBCompleted(this, new GET_OPEN_USBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_ANTIVIRUS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_ANTIVIRUS(string Account, string IPRange) {
            object[] results = this.Invoke("GET_ANTIVIRUS", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_ANTIVIRUSAsync(string Account, string IPRange) {
            this.GET_ANTIVIRUSAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_ANTIVIRUSAsync(string Account, string IPRange, object userState) {
            if ((this.GET_ANTIVIRUSOperationCompleted == null)) {
                this.GET_ANTIVIRUSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_ANTIVIRUSOperationCompleted);
            }
            this.InvokeAsync("GET_ANTIVIRUS", new object[] {
                        Account,
                        IPRange}, this.GET_ANTIVIRUSOperationCompleted, userState);
        }
        
        private void OnGET_ANTIVIRUSOperationCompleted(object arg) {
            if ((this.GET_ANTIVIRUSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_ANTIVIRUSCompleted(this, new GET_ANTIVIRUSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_CONNECTED_INTERNET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_CONNECTED_INTERNET(string Account, string IPRange) {
            object[] results = this.Invoke("GET_CONNECTED_INTERNET", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_CONNECTED_INTERNETAsync(string Account, string IPRange) {
            this.GET_CONNECTED_INTERNETAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_CONNECTED_INTERNETAsync(string Account, string IPRange, object userState) {
            if ((this.GET_CONNECTED_INTERNETOperationCompleted == null)) {
                this.GET_CONNECTED_INTERNETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_CONNECTED_INTERNETOperationCompleted);
            }
            this.InvokeAsync("GET_CONNECTED_INTERNET", new object[] {
                        Account,
                        IPRange}, this.GET_CONNECTED_INTERNETOperationCompleted, userState);
        }
        
        private void OnGET_CONNECTED_INTERNETOperationCompleted(object arg) {
            if ((this.GET_CONNECTED_INTERNETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_CONNECTED_INTERNETCompleted(this, new GET_CONNECTED_INTERNETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_OPEN_CDROM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_OPEN_CDROM(string Account, string IPRange) {
            object[] results = this.Invoke("GET_OPEN_CDROM", new object[] {
                        Account,
                        IPRange});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_OPEN_CDROMAsync(string Account, string IPRange) {
            this.GET_OPEN_CDROMAsync(Account, IPRange, null);
        }
        
        /// <remarks/>
        public void GET_OPEN_CDROMAsync(string Account, string IPRange, object userState) {
            if ((this.GET_OPEN_CDROMOperationCompleted == null)) {
                this.GET_OPEN_CDROMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_OPEN_CDROMOperationCompleted);
            }
            this.InvokeAsync("GET_OPEN_CDROM", new object[] {
                        Account,
                        IPRange}, this.GET_OPEN_CDROMOperationCompleted, userState);
        }
        
        private void OnGET_OPEN_CDROMOperationCompleted(object arg) {
            if ((this.GET_OPEN_CDROMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_OPEN_CDROMCompleted(this, new GET_OPEN_CDROMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_RISK_SOFTWARECompletedEventHandler(object sender, GET_RISK_SOFTWARECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_RISK_SOFTWARECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_RISK_SOFTWARECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_UNJOIN_DOMAINCompletedEventHandler(object sender, GET_UNJOIN_DOMAINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_UNJOIN_DOMAINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_UNJOIN_DOMAINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_NOUPDATE_WANNACRYCompletedEventHandler(object sender, GET_NOUPDATE_WANNACRYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_NOUPDATE_WANNACRYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_NOUPDATE_WANNACRYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_OPEN_445CompletedEventHandler(object sender, GET_OPEN_445CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_OPEN_445CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_OPEN_445CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_ACCOUNT_ADMIMCompletedEventHandler(object sender, GET_ACCOUNT_ADMIMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_ACCOUNT_ADMIMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_ACCOUNT_ADMIMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_OPEN_USBCompletedEventHandler(object sender, GET_OPEN_USBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_OPEN_USBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_OPEN_USBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_ANTIVIRUSCompletedEventHandler(object sender, GET_ANTIVIRUSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_ANTIVIRUSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_ANTIVIRUSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_CONNECTED_INTERNETCompletedEventHandler(object sender, GET_CONNECTED_INTERNETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_CONNECTED_INTERNETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_CONNECTED_INTERNETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GET_OPEN_CDROMCompletedEventHandler(object sender, GET_OPEN_CDROMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_OPEN_CDROMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_OPEN_CDROMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591