//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ShowUI.GET_ATE_SUM_TESTED_DUT {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    using System.Net;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicepostdataSoap", Namespace="http://tempuri.org/")]
    public partial class Servicepostdata : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GET_WIP_GROUPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Servicepostdata() {
            this.Url = global::ShowUI.Properties.Settings.Default.ShowUI4_6_GET_ATE_SUM_TESTED_DUT_Servicepostdata;

            //===== add ====
            try
            {
                var myrequest = (HttpWebRequest)WebRequest.Create(this.Url);
                myrequest.Timeout = 1000;
                var response = (HttpWebResponse)myrequest.GetResponse();
                if (response.StatusCode != HttpStatusCode.OK)
                {
                    this.Url = "http://10.224.81.156/B05/Servicepostdata.asmx";
                }
            }
            catch (Exception)
            {

                this.Url = "http://10.224.81.156/B05/Servicepostdata.asmx";
            }

            //==================
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GET_WIP_GROUPCompletedEventHandler GET_WIP_GROUPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_WIP_GROUP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GET_WIP_GROUP(string serial_number) {
            object[] results = this.Invoke("GET_WIP_GROUP", new object[] {
                        serial_number});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GET_WIP_GROUPAsync(string serial_number) {
            this.GET_WIP_GROUPAsync(serial_number, null);
        }
        
        /// <remarks/>
        public void GET_WIP_GROUPAsync(string serial_number, object userState) {
            if ((this.GET_WIP_GROUPOperationCompleted == null)) {
                this.GET_WIP_GROUPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_WIP_GROUPOperationCompleted);
            }
            this.InvokeAsync("GET_WIP_GROUP", new object[] {
                        serial_number}, this.GET_WIP_GROUPOperationCompleted, userState);
        }
        
        private void OnGET_WIP_GROUPOperationCompleted(object arg) {
            if ((this.GET_WIP_GROUPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_WIP_GROUPCompleted(this, new GET_WIP_GROUPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GET_WIP_GROUPCompletedEventHandler(object sender, GET_WIP_GROUPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_WIP_GROUPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_WIP_GROUPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591